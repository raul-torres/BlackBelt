// <auto-generated />
using System;
using BlackBelt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlackBelt.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BlackBelt.Models.Actividad", b =>
                {
                    b.Property<int>("ActividadId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Duration");

                    b.Property<string>("DurationSpan");

                    b.Property<DateTime>("Tiempo");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("ActividadId");

                    b.HasIndex("UserId");

                    b.ToTable("Actividad");
                });

            modelBuilder.Entity("BlackBelt.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BlackBelt.Models.UserActividadRelation", b =>
                {
                    b.Property<int>("UserActividadRelationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActividadId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("UserActividadRelationId");

                    b.HasIndex("ActividadId");

                    b.HasIndex("UserId");

                    b.ToTable("UserActividadRelation");
                });

            modelBuilder.Entity("BlackBelt.Models.Actividad", b =>
                {
                    b.HasOne("BlackBelt.Models.User", "Creator")
                        .WithMany("CreatedActivities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlackBelt.Models.UserActividadRelation", b =>
                {
                    b.HasOne("BlackBelt.Models.Actividad", "Actividad")
                        .WithMany("Participants")
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlackBelt.Models.User", "User")
                        .WithMany("JoinedActivities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
